//////////////////////////
// Entity Technology

entity Technology {
	name String required,
    code String
}

entity Technologyproperty {
	name String,
	code String
}

entity Technologypropertyvalue {
	value String
}

/////////////////////////
// Entity Issue

entity Issue {
	name String required,
    code String
}

///////////////////////
// Entity Status

entity Status {
	name String required,
    code String
}


relationship OneToMany {
	Technology{technology} to Technologypropertyvalue
}

relationship OneToMany {
   Technologyproperty{technologyproperty} to Technologypropertyvalue
}


dto Technology with mapstruct
service Technology with serviceClass

//////////////////////////
// Entity Expert Account

entity ExpertAccount  {
    phone String,
    skype String,
    othercommunication String,
    location String,
    expertScore Integer,
    handle String,
    languages String,
    imagePath String maxlength(512),
    firstTechnologyPreference String,
    secondTechnologyPreference String,
    thirdTechnologyPreference String,
    isAvailable Boolean,
    expertBio String maxlength(4096),
    expertSince ZonedDateTime,
    numberOfCases Integer,
    welcomeMessage String maxlength(2048)
}

relationship OneToOne {
	ExpertAccount{user} to User{expertaccount}
}

///////////////////////////////////////
// Entity MetadataType

enum Metadatatypeenum {
    ISSTRING, ISINTEGER, ISBOOLEAN
}

///////////////////////////////////////
// Entity Global Meta Data

entity GlobalMetadata {
    name String,
    value String,
    valueType Metadatatypeenum
}

//////////////////////////
// Entity User Account

entity Useraccount  {
    location String,
    preferlocalexpert Boolean,
    handle String,
    companyname String,
    inviteContext String maxlength(512)
}

relationship OneToOne {
	Useraccount{user} to User{useraccount}
}

//////////////////////
// Entity Reference Doc

entity Referencedoc {
	name String,
    url String
}

relationship OneToMany {
    User{referencedoc(user)} to Referencedoc{user}
}

relationship OneToMany {
    Technology{referencedoc(technology)} to Referencedoc{technology}
}

entity Groupaccess {}

relationship OneToMany {
    User{groupaccess(authorizeduser)} to Groupaccess{authorizeduser}
}

relationship OneToMany {
    User{groupaccess(user)} to Groupaccess{user}
}

entity Supportcase {
	summary String maxlength (1024),
    expectedResult String maxlength (1024),
    statusMsg String,
    dateCreated ZonedDateTime,
    dateLastUpdate ZonedDateTime,
    chatUrl String maxlength (1024),
    etaCompletion String,
    estimateHours Integer,
    estimateComment String maxlength (2048)
    isApproved Boolean,
    timeOnCase Integer
}

relationship OneToMany {
    User{supportcase(user)} to Supportcase{user}
}

relationship OneToMany {
    User{supportcase(expert)} to Supportcase{expert}
}

relationship OneToMany {
    Technology{supportcase(technology)} to Supportcase{technology}
}
relationship OneToMany {
    Status{supportcase(status)} to Supportcase{status}
}
relationship OneToMany {
    Issue{supportcase(issue)} to Supportcase{issue}
}


entity Casetechnologyproperty {
	propertyname String,
    propertyvalue String
}

relationship OneToMany {
    Supportcase{casetechnologyproperty(case)} to Casetechnologyproperty{supportcase}
}

relationship OneToMany {
    Technology{casetechnologyproperty(technology)} to Casetechnologyproperty{technology}
}

// Entity Payment

entity Payment {
	ccdata String maxlength(1024)
}

relationship OneToMany {
    User{payment(user)} to Payment{user}
}

/////////////////////////////////////
// Entity Badge and ExpertBadge
//
entity Expertbadge {
    expertBadgeCount Integer
}

entity Badge {
	name String required,
    code String,
    ordinal Integer
}

relationship OneToMany {
    ExpertAccount{expertbadge(expertaccount)} to Expertbadge{expertaccount}
}

relationship OneToMany {
    Badge{expertbadge(badge)} to Expertbadge{badge}
}

// Entity Updatetype

enum Updateenum {
    UPDATE, RESOLUTION, ATTEMPTED_RESOLUTION
}

entity Updatetype {
	name Updateenum
}

// Entity Case update

entity Caseupdate  {
	dateUpdated ZonedDateTime,
    updateMsg String maxlength(2048),
    url String maxlength(1024)
}


relationship OneToMany {
    User{Caseupdate(user)} to Caseupdate{user}
}

relationship OneToMany {
    Supportcase{Caseupdate(supportcase)} to Caseupdate{supportcase}
}

relationship OneToMany {
    Updatetype{Caseupdate(updatetype)} to Caseupdate{updatetype}
}

////////////////////////////////////
// Entity Rating
//

entity Rating {
	dateRated ZonedDateTime,
    score Integer,
    rateDetails String,
    hasExpertExceeded Boolean,
    ratingComments String maxlength(1024)
}

relationship OneToMany {
	Supportcase{Rating(case)} to Rating{supportcase}
}

////////////////////////////////////////
// Entity Attachment
//
entity Attachment {
	name String maxlength(1024),
    url String maxlength(1024),
    dataStream Blob
}

relationship OneToMany {
	Supportcase{Attachment(supportcase)} to Attachment{supportcase}
}

///////////////////////////////////
// Shared Case Entity
//
entity SharedCase {}

relationship OneToMany {
    Supportcase{sharedcase(supportcase)} to SharedCase{supportcase}
}

relationship OneToMany {
    User{sharedcase(user)} to SharedCase{user}
}

relationship OneToMany {
    User{sharedcase(owner)} to SharedCase{owner}
}

////////////////////////////////////
// Entity EscalateCase
//

entity EscalateCase {
    reason String maxlength(4096),
	dateEscalated ZonedDateTime,
    escalationType String
}

relationship OneToMany {
	Supportcase{EscalateCase(supportcase)} to EscalateCase{supportcase}
}

relationship OneToMany {
	User{EscalateCase(user)} to EscalateCase{user}
}



